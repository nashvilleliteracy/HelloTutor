@{
ViewBag.Title = "Tutors";
}
<h1>@ViewBag.Title</h1>
@(Html.Kendo().Grid<HelloTutor.Tutor>()
          .Name("gridTutors")
          .Columns(columns =>
          {
            columns.Command(command => { command.Edit(); command.Destroy(); }).Title("Commands").Width(180);
            columns.Bound(T => T.FirstName);
            columns.Bound(T => T.LastName);
            columns.Bound(T => T.Email);
            columns.Bound(T => T.PhoneNumber);
            columns.Bound(T => T.Comments);
            columns.Bound(T => T.Id).Groupable(false).Visible(false);
            columns.Bound(T => T.GUID).Groupable(false).Visible(false);
          })
          .HtmlAttributes(new { style = "height:400px;" })
          .ToolBar(toolbar => toolbar
            .Create()
            .Text("Add Tutor"))
          .Editable(editable => editable.Mode(GridEditMode.InLine))
          .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5)) // Enable paging
          .Scrollable()
          .Groupable()
          .Sortable() // Enable sorting
          .Filterable()
          .DataSource(dataSource => dataSource //Configure the Grid data source.
              .Ajax() //Specify that Ajax binding is used.
              .Model(model => model.Id(T => T.Id))
              .Create(update => update.Action("EditingInline_Create", "Tutors"))
              .Read(read => read.Action("Tutors_Read", "Tutors")) //Set the action method which will return the data in JSON format.
              .Update(update => update.Action("EditingInline_Update", "Tutors"))
              .Destroy(update => update.Action("EditingInline_Destroy", "Tutors"))
              .PageSize(20)
              .Events(events => events.Error("error_handler"))
           )
)
<script type="text/javascript">
    function error_handler(e) {
        if (e.errors) {
            var message = "There are some errors:\n";
            // Create a message containing all errors.
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            // Display the message.
            alert(message);
            // Cancel the changes.
            var grid = $("#gridClasses").data("kendoGrid");
            grid.cancelChanges();
        }
    }
</script>